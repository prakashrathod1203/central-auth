metadata.name = SELECT md.name FROM dgs.meta_data md WHERE md.first_letter = :firstLetter \
				AND md.name_flag = :nameFlag ORDER BY md.name ASC
				
user.borrow = SELECT userName, phone, email, userId, sum(mb) totalDebit, totalCredit FROM \
				(SELECT concat(u.last_name, ' ', u.first_name,' ', u.middle_name) AS userName, u.phone AS phone, u.user_name AS email, u.user_id AS userId, \
				(SELECT SUM(CASE WHEN credit > 0 THEN credit ELSE 0 END) FROM borrow_calculation WHERE user_id = u.user_id) AS totalCredit, SUM(sm.price * sm.quantity) AS mb FROM sales_milk sm \
				INNER JOIN user u ON(u.user_id = sm.user_id) \
				WHERE sm.payment_mode = 'Borrow' GROUP BY u.user_id \
			UNION ALL \
				SELECT concat(u.last_name, ' ', u.first_name,' ', u.middle_name) AS userName, u.phone AS phone,u.user_name AS email, \
				u.user_id AS userId, (SELECT SUM(CASE WHEN credit > 0 THEN credit ELSE 0 END) FROM borrow_calculation WHERE user_id = u.user_id) AS totalCredit, SUM(sf.price * sf.quantity) AS fb FROM sales_food sf \
				INNER JOIN user u ON(u.user_id = sf.user_id) \
				WHERE sf.payment_mode = 'Borrow' GROUP BY u.user_id \
			UNION ALL \
				SELECT concat(u.last_name, ' ', u.first_name,' ', u.middle_name) AS userName, u.phone AS phone,u.user_name AS email, \
				u.user_id AS userId, (SELECT SUM(CASE WHEN credit > 0 THEN credit ELSE 0 END) FROM borrow_calculation WHERE user_id = u.user_id) AS totalCredit, SUM(bc.debit) AS fb FROM borrow_calculation bc \
				INNER JOIN user u ON(u.user_id = bc.user_id) \
				WHERE bc.debit IS NOT NULL GROUP BY u.user_id) ad GROUP BY userId;
				
user.borrow.by.userid = SELECT userName, phone, email, userId, sum(mb) totalDebit, totalCredit FROM \
					(SELECT concat(u.last_name, ' ', u.first_name,' ', u.middle_name) AS userName, u.phone AS phone, u.user_name AS email, u.user_id AS userId, \
					(SELECT SUM(CASE WHEN credit > 0 THEN credit ELSE 0 END) FROM borrow_calculation WHERE user_id = :userId) AS totalCredit, SUM(sm.price * sm.quantity) AS mb FROM sales_milk sm \
					INNER JOIN user u ON(u.user_id = sm.user_id) \
					WHERE sm.payment_mode = 'Borrow' AND u.user_id = :userId \
				UNION ALL \
					SELECT concat(u.last_name, ' ', u.first_name,' ', u.middle_name) AS userName, u.phone AS phone,u.user_name AS email, \
					u.user_id AS userId, (SELECT SUM(CASE WHEN credit > 0 THEN credit ELSE 0 END) FROM borrow_calculation WHERE user_id = :userId) AS totalCredit, SUM(sf.price * sf.quantity) AS fb FROM sales_food sf \
					INNER JOIN user u ON(u.user_id = sf.user_id) \
					WHERE sf.payment_mode = 'Borrow' AND u.user_id = :userId \
				UNION ALL \
					SELECT concat(u.last_name, ' ', u.first_name,' ', u.middle_name) AS userName, u.phone AS phone,u.user_name AS email, \
					u.user_id AS userId, (SELECT SUM(CASE WHEN credit > 0 THEN credit ELSE 0 END) FROM borrow_calculation WHERE user_id = :userId) AS totalCredit, SUM(bc.debit) AS fb FROM borrow_calculation bc \
					INNER JOIN user u ON(u.user_id = bc.user_id) \
					WHERE bc.debit IS NOT NULL AND bc.user_id = :userId) ad;
				
user.borrow.with.category = SELECT u.user_id AS userId, sm.category_id AS categoryId, cat.name AS categoryName, \
								SUM(sm.price * sm.quantity) AS totalDebit, 'M' AS code, \
								(SELECT SUM(CASE WHEN bc.credit > 0 THEN bc.credit ELSE 0 END) FROM borrow_calculation bc WHERE bc.user_id = :userId AND bc.milk_cat_id = cat.category_id) AS totalCredit FROM sales_milk sm \
								INNER JOIN user u ON(u.user_id = sm.user_id) \
								INNER JOIN milk_category cat ON(cat.category_id = sm.category_id) \
								WHERE sm.payment_mode = 'Borrow' AND u.user_id = :userId GROUP BY cat.category_id, u.user_id \
							UNION ALL \
								SELECT u.user_id AS userId, sf.feed_id AS categoryId, cat.name AS categoryName, \
								SUM(sf.price * sf.quantity) AS totalDebit, 'F' AS code, \
								(SELECT SUM(CASE WHEN bc.credit > 0 THEN bc.credit ELSE 0 END) FROM borrow_calculation bc WHERE bc.user_id = :userId AND bc.food_cat_id = cat.feed_id) AS totalCredit FROM sales_food sf \
								INNER JOIN user u ON(u.user_id = sf.user_id) \
								INNER JOIN feed_category cat ON(cat.feed_id = sf.feed_id) \
								WHERE sf.payment_mode = 'Borrow' AND u.user_id = :userId GROUP BY cat.feed_id, u.user_id \
							UNION ALL \
								SELECT u.user_id AS userId, null AS categoryId, 'Debit Amount/\u0A89\u0AA7\u0ABE\u0AB0  \u0AB0\u0A95\u0AAE' AS categoryName, \
								SUM(bc.debit) AS totalDebit, 'D' AS code, \
								(SELECT SUM(CASE WHEN bc.credit > 0 THEN bc.credit ELSE 0 END) FROM borrow_calculation bc WHERE bc.user_id = :userId AND bc.food_cat_id IS NULL AND bc.milk_cat_id IS NULL) AS totalCredit FROM borrow_calculation bc \
								INNER JOIN user u ON(u.user_id = bc.user_id) \
								WHERE bc.debit IS NOT NULL AND u.user_id = :userId GROUP BY u.user_id;
							
user.sale.food = SELECT sf.date_time AS dateTime, cat.name AS categoryName, sf.price AS price, sf.quantity AS quantity, \
				sf.payment_mode AS paymentMode, (CASE WHEN sf.payment_mode LIKE 'Borrow' THEN 'mat-color-warn' ELSE 'mat-color-accent' END) AS colorClass, sf.created_by AS createdBy, \
				sf.last_modified_by AS modifiedBy FROM  sales_food sf \
				INNER JOIN feed_category cat ON(cat.feed_id = sf.feed_id) \
				WHERE sf.user_id = :userId \
				AND (sf.date_time >= :startDate AND sf.date_time <= :endDate) \
				ORDER BY sf.date_time DESC;

user.sale.milk = SELECT sm.date_time AS dateTime, cat.name AS categoryName, sm.price AS price, \
				sm.quantity AS quantity, (CASE WHEN sm.payment_mode LIKE 'Borrow' THEN 'mat-color-warn' ELSE 'mat-color-accent' END) AS colorClass, \
				sm.payment_mode AS paymentMode, sm.created_by AS createdBy, sm.last_modified_by AS modifiedBy FROM  sales_milk sm \
				INNER JOIN milk_category cat ON(cat.category_id = sm.category_id) \
				WHERE sm.user_id = :userId AND \
				(sm.date_time >= :startDate AND sm.date_time <= :endDate) \
				ORDER BY sm.date_time DESC
				
user.sale.borrow = SELECT bc.date_time AS dateTime, (CASE WHEN fc.name IS NOT NULL THEN 'mat-color-primary' WHEN mc.name IS NOT NULL THEN 'mat-color-primary' WHEN bc.credit IS NOT NULL THEN 'mat-color-primary' ELSE 'mat-color-warn' END) AS colorClass, \
				bc.debit AS debitAmount, (CASE WHEN fc.name IS NOT NULL THEN fc.name WHEN mc.name IS NOT NULL THEN mc.name ELSE 'Debit Amount/\u0A89\u0AA7\u0ABE\u0AB0  \u0AB0\u0A95\u0AAE' END) AS categoryName, \
				bc.credit AS totalCredit, bc.created_by AS createdBy, bc.last_modified_by AS modifiedBy, bc.note AS note FROM borrow_calculation bc \
				LEFT JOIN milk_category mc ON(mc.category_id = bc.milk_cat_id) \
				LEFT JOIN feed_category fc ON(fc.feed_id = bc.food_cat_id) \
				WHERE bc.user_id = :userId AND (bc.date_time >= :startDate AND bc.date_time <= :endDate) \
				ORDER BY bc.date_time DESC
				
				
				
				

				